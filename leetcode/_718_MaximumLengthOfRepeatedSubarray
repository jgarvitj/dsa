class Solution {
    
    //dp[i][j] -> longest subsequece starting at i for A and j for B
    public int findLength(int[] A, int[] B) {
        
        int alen = A.length;
        int blen = B.length;
        int dp[][] = new int[alen][blen];
        int maxLen = 0;
        
        for(int i = 0; i < alen; i++) {
            for(int j = 0; j < blen; j++) {
                if(A[i] == B[j]) {
                    dp[i][j] = 1;
                    maxLen = 1;
                }
                else {
                    dp[i][j] = 0;
                }
            }
        }
        
        
        
        for(int i = alen - 2; i >= 0; i--) {
            for(int j = blen - 2; j >= 0; j--) {
                if(dp[i+1][j+1] > 0 && dp[i][j] != 0) {
                    dp[i][j] = 1 + dp[i+1][j+1];
                    maxLen = Math.max(maxLen, dp[i][j]);
                }
            }
        }
        return maxLen;
    }
}
