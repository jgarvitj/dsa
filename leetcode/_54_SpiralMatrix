class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        
        List<Integer> ans = new ArrayList<>();
        
        if(matrix.length == 0) {
            return ans;
        }
        
        int tr = 0;
        int br = matrix.length-1;
        int lc = 0;
        int rc = matrix[0].length-1;
        int dir = 0;
        
        while(tr <= br && lc <= rc ) {
            if(dir == 0) {
                for(int i = lc; i <= rc; i++) {
                    ans.add(matrix[tr][i]);
                }
                tr++;
            } else if(dir == 1) {
                for(int i = tr; i <= br; i++) {
                    ans.add(matrix[i][rc]);
                }
                rc--;
            } else if(dir == 2) {
                for(int i = rc; i >= lc; i--) {
                    ans.add(matrix[br][i]);
                }
                br--;
            } else {
                for(int i = br; i >= tr; i--) {
                    ans.add(matrix[i][lc]);
                }
                lc++;
            }
            dir = (dir + 1)%4;
        }
        return ans;
    }
}
